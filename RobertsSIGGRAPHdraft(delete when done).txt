	The sand map was made by layering a height map for the oasis pool and two more to represent flowing sand dunes. Each are added together to give the final height for each vertex, then textures matching each moving sand part of the height map are applied.
	The vertex shader for the sand takes in a 256 by 256 plane and changes the heights of the sand by taking in the combined intensity of the color channels of three different textures. The first is a static texture which acts as a base to make the center of the map deeper than the edges for the oasis. The second and third maps are both repeating textures to represent the actual sand moving across the map. Each is a bump map version of a texture passed into the fragment shader so they match when rendering. The second map makes up the large waves in the scene, and the third map simulates smaller lumps of sand making their way through the map more quickly, as if the wind is blowing.
	Each sand's texture's UV mapping is offset by a variable called sandSpeed, which is incremented upward each frame from the sand object file, so the UV map shifts. The vertex's height value (which is conveniently Y in Three.js, and Z in GLSL) is then offset by the combined RGB value of the closest pixel on the bump map. The height added from each texture is weighted, with the base heightmap and the dunes modifying the height significantly more than the fast moving sand lumps. Then the total offset is added to the actual position of the terrain plane in the scene. Finally, the position of the verticies are multiplied by the model matrix, view matrix, and projection matrix, which respectively apply world coordinates to the map, rotate the map towards the camera, and decides how map the scene to the screen.

[put sand4bump.jpg next to SandCombo5.png]

[on the next line, put sand1bump.jpg next to sand1.jpg]

Figure XX. Texture on left is bump map for vertex shader, one on right is actual texture people will see.

	The fragment shader is much simpler than the vertex shader and applies the same movement transformations as for the second and third textures for the vertex shader so the sand looks like it moves across the scene. Then each texture is mixed together, with the large dune texture adding depth to the scene with the peaks of the dunes being lighter than the pits. The default dune texture is actually black and white, so I mixed it together with a repeating sand texture in a photo editor and gave it a reddish tinge to make the scene more interesting. The end result of mixing the dune and repeating sand texture makes it look as if the sand is flowing, while still accentuating the dunes themselves.